/**
 * Customer Self-Service API
 * This API allows customers of Lakeside Mutual to sign up, log in and manage their policies and user profile themselves.
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AuthenticationRequestDto from '../model/AuthenticationRequestDto';
import AuthenticationResponseDto from '../model/AuthenticationResponseDto';
import SignupRequestDto from '../model/SignupRequestDto';
import UserResponseDto from '../model/UserResponseDto';

/**
* AuthenticationController service.
* @module api/AuthenticationControllerApi
* @version v1.0.0
*/
export default class AuthenticationControllerApi {

    /**
    * Constructs a new AuthenticationControllerApi. 
    * @alias module:api/AuthenticationControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the authenticationRequest operation.
     * @callback module:api/AuthenticationControllerApi~authenticationRequestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AuthenticationResponseDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Authenticate a user based on a given email address and password.
     * @param {module:model/AuthenticationRequestDto} authenticationRequestDto 
     * @param {module:api/AuthenticationControllerApi~authenticationRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AuthenticationResponseDto}
     */
    authenticationRequest(authenticationRequestDto, callback) {
      let postBody = authenticationRequestDto;
      // verify the required parameter 'authenticationRequestDto' is set
      if (authenticationRequestDto === undefined || authenticationRequestDto === null) {
        throw new Error("Missing the required parameter 'authenticationRequestDto' when calling authenticationRequest");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = AuthenticationResponseDto;
      return this.apiClient.callApi(
        '/auth', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the signupUser operation.
     * @callback module:api/AuthenticationControllerApi~signupUserCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserResponseDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new user.
     * @param {module:model/SignupRequestDto} signupRequestDto 
     * @param {module:api/AuthenticationControllerApi~signupUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserResponseDto}
     */
    signupUser(signupRequestDto, callback) {
      let postBody = signupRequestDto;
      // verify the required parameter 'signupRequestDto' is set
      if (signupRequestDto === undefined || signupRequestDto === null) {
        throw new Error("Missing the required parameter 'signupRequestDto' when calling signupUser");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = UserResponseDto;
      return this.apiClient.callApi(
        '/auth/signup', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
