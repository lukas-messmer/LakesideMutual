/**
 * Customer Self-Service API
 * This API allows customers of Lakeside Mutual to sign up, log in and manage their policies and user profile themselves.
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Link model module.
 * @module model/Link
 * @version v1.0.0
 */
class Link {
    /**
     * Constructs a new <code>Link</code>.
     * @alias module:model/Link
     */
    constructor() { 
        
        Link.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Link</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Link} obj Optional instance to populate.
     * @return {module:model/Link} The populated <code>Link</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Link();

            if (data.hasOwnProperty('rel')) {
                obj['rel'] = ApiClient.convertToType(data['rel'], 'String');
            }
            if (data.hasOwnProperty('href')) {
                obj['href'] = ApiClient.convertToType(data['href'], 'String');
            }
            if (data.hasOwnProperty('hreflang')) {
                obj['hreflang'] = ApiClient.convertToType(data['hreflang'], 'String');
            }
            if (data.hasOwnProperty('media')) {
                obj['media'] = ApiClient.convertToType(data['media'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('deprecation')) {
                obj['deprecation'] = ApiClient.convertToType(data['deprecation'], 'String');
            }
            if (data.hasOwnProperty('profile')) {
                obj['profile'] = ApiClient.convertToType(data['profile'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Link</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Link</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['rel'] && !(typeof data['rel'] === 'string' || data['rel'] instanceof String)) {
            throw new Error("Expected the field `rel` to be a primitive type in the JSON string but got " + data['rel']);
        }
        // ensure the json data is a string
        if (data['href'] && !(typeof data['href'] === 'string' || data['href'] instanceof String)) {
            throw new Error("Expected the field `href` to be a primitive type in the JSON string but got " + data['href']);
        }
        // ensure the json data is a string
        if (data['hreflang'] && !(typeof data['hreflang'] === 'string' || data['hreflang'] instanceof String)) {
            throw new Error("Expected the field `hreflang` to be a primitive type in the JSON string but got " + data['hreflang']);
        }
        // ensure the json data is a string
        if (data['media'] && !(typeof data['media'] === 'string' || data['media'] instanceof String)) {
            throw new Error("Expected the field `media` to be a primitive type in the JSON string but got " + data['media']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['deprecation'] && !(typeof data['deprecation'] === 'string' || data['deprecation'] instanceof String)) {
            throw new Error("Expected the field `deprecation` to be a primitive type in the JSON string but got " + data['deprecation']);
        }
        // ensure the json data is a string
        if (data['profile'] && !(typeof data['profile'] === 'string' || data['profile'] instanceof String)) {
            throw new Error("Expected the field `profile` to be a primitive type in the JSON string but got " + data['profile']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {String} rel
 */
Link.prototype['rel'] = undefined;

/**
 * @member {String} href
 */
Link.prototype['href'] = undefined;

/**
 * @member {String} hreflang
 */
Link.prototype['hreflang'] = undefined;

/**
 * @member {String} media
 */
Link.prototype['media'] = undefined;

/**
 * @member {String} title
 */
Link.prototype['title'] = undefined;

/**
 * @member {String} type
 */
Link.prototype['type'] = undefined;

/**
 * @member {String} deprecation
 */
Link.prototype['deprecation'] = undefined;

/**
 * @member {String} profile
 */
Link.prototype['profile'] = undefined;

/**
 * @member {String} name
 */
Link.prototype['name'] = undefined;






export default Link;

