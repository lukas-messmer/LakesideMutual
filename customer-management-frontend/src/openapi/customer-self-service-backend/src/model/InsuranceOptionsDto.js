/**
 * Customer Self-Service API
 * This API allows customers of Lakeside Mutual to sign up, log in and manage their policies and user profile themselves.
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MoneyAmountDto from './MoneyAmountDto';

/**
 * The InsuranceOptionsDto model module.
 * @module model/InsuranceOptionsDto
 * @version v1.0.0
 */
class InsuranceOptionsDto {
    /**
     * Constructs a new <code>InsuranceOptionsDto</code>.
     * @alias module:model/InsuranceOptionsDto
     * @param startDate {Date} 
     * @param insuranceType {String} 
     * @param deductible {module:model/MoneyAmountDto} 
     */
    constructor(startDate, insuranceType, deductible) { 
        
        InsuranceOptionsDto.initialize(this, startDate, insuranceType, deductible);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, startDate, insuranceType, deductible) { 
        obj['startDate'] = startDate;
        obj['insuranceType'] = insuranceType;
        obj['deductible'] = deductible;
    }

    /**
     * Constructs a <code>InsuranceOptionsDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InsuranceOptionsDto} obj Optional instance to populate.
     * @return {module:model/InsuranceOptionsDto} The populated <code>InsuranceOptionsDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InsuranceOptionsDto();

            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
            if (data.hasOwnProperty('insuranceType')) {
                obj['insuranceType'] = ApiClient.convertToType(data['insuranceType'], 'String');
            }
            if (data.hasOwnProperty('deductible')) {
                obj['deductible'] = MoneyAmountDto.constructFromObject(data['deductible']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InsuranceOptionsDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InsuranceOptionsDto</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InsuranceOptionsDto.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['insuranceType'] && !(typeof data['insuranceType'] === 'string' || data['insuranceType'] instanceof String)) {
            throw new Error("Expected the field `insuranceType` to be a primitive type in the JSON string but got " + data['insuranceType']);
        }
        // validate the optional field `deductible`
        if (data['deductible']) { // data not null
          MoneyAmountDto.validateJSON(data['deductible']);
        }

        return true;
    }


}

InsuranceOptionsDto.RequiredProperties = ["startDate", "insuranceType", "deductible"];

/**
 * @member {Date} startDate
 */
InsuranceOptionsDto.prototype['startDate'] = undefined;

/**
 * @member {String} insuranceType
 */
InsuranceOptionsDto.prototype['insuranceType'] = undefined;

/**
 * @member {module:model/MoneyAmountDto} deductible
 */
InsuranceOptionsDto.prototype['deductible'] = undefined;






export default InsuranceOptionsDto;

