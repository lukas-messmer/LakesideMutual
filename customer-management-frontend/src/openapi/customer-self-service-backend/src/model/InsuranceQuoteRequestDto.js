/**
 * Customer Self-Service API
 * This API allows customers of Lakeside Mutual to sign up, log in and manage their policies and user profile themselves.
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CustomerInfoDto from './CustomerInfoDto';
import InsuranceOptionsDto from './InsuranceOptionsDto';
import InsuranceQuoteDto from './InsuranceQuoteDto';
import RequestStatusChangeDto from './RequestStatusChangeDto';

/**
 * The InsuranceQuoteRequestDto model module.
 * @module model/InsuranceQuoteRequestDto
 * @version v1.0.0
 */
class InsuranceQuoteRequestDto {
    /**
     * Constructs a new <code>InsuranceQuoteRequestDto</code>.
     * the insurance quote request
     * @alias module:model/InsuranceQuoteRequestDto
     * @param customerInfo {module:model/CustomerInfoDto} 
     * @param insuranceOptions {module:model/InsuranceOptionsDto} 
     */
    constructor(customerInfo, insuranceOptions) { 
        
        InsuranceQuoteRequestDto.initialize(this, customerInfo, insuranceOptions);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, customerInfo, insuranceOptions) { 
        obj['customerInfo'] = customerInfo;
        obj['insuranceOptions'] = insuranceOptions;
    }

    /**
     * Constructs a <code>InsuranceQuoteRequestDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InsuranceQuoteRequestDto} obj Optional instance to populate.
     * @return {module:model/InsuranceQuoteRequestDto} The populated <code>InsuranceQuoteRequestDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InsuranceQuoteRequestDto();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('statusHistory')) {
                obj['statusHistory'] = ApiClient.convertToType(data['statusHistory'], [RequestStatusChangeDto]);
            }
            if (data.hasOwnProperty('customerInfo')) {
                obj['customerInfo'] = CustomerInfoDto.constructFromObject(data['customerInfo']);
            }
            if (data.hasOwnProperty('insuranceOptions')) {
                obj['insuranceOptions'] = InsuranceOptionsDto.constructFromObject(data['insuranceOptions']);
            }
            if (data.hasOwnProperty('insuranceQuote')) {
                obj['insuranceQuote'] = InsuranceQuoteDto.constructFromObject(data['insuranceQuote']);
            }
            if (data.hasOwnProperty('policyId')) {
                obj['policyId'] = ApiClient.convertToType(data['policyId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InsuranceQuoteRequestDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InsuranceQuoteRequestDto</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InsuranceQuoteRequestDto.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['statusHistory']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['statusHistory'])) {
                throw new Error("Expected the field `statusHistory` to be an array in the JSON data but got " + data['statusHistory']);
            }
            // validate the optional field `statusHistory` (array)
            for (const item of data['statusHistory']) {
                RequestStatusChangeDto.validateJSON(item);
            };
        }
        // validate the optional field `customerInfo`
        if (data['customerInfo']) { // data not null
          CustomerInfoDto.validateJSON(data['customerInfo']);
        }
        // validate the optional field `insuranceOptions`
        if (data['insuranceOptions']) { // data not null
          InsuranceOptionsDto.validateJSON(data['insuranceOptions']);
        }
        // validate the optional field `insuranceQuote`
        if (data['insuranceQuote']) { // data not null
          InsuranceQuoteDto.validateJSON(data['insuranceQuote']);
        }
        // ensure the json data is a string
        if (data['policyId'] && !(typeof data['policyId'] === 'string' || data['policyId'] instanceof String)) {
            throw new Error("Expected the field `policyId` to be a primitive type in the JSON string but got " + data['policyId']);
        }

        return true;
    }


}

InsuranceQuoteRequestDto.RequiredProperties = ["customerInfo", "insuranceOptions"];

/**
 * @member {Number} id
 */
InsuranceQuoteRequestDto.prototype['id'] = undefined;

/**
 * @member {Date} date
 */
InsuranceQuoteRequestDto.prototype['date'] = undefined;

/**
 * @member {Array.<module:model/RequestStatusChangeDto>} statusHistory
 */
InsuranceQuoteRequestDto.prototype['statusHistory'] = undefined;

/**
 * @member {module:model/CustomerInfoDto} customerInfo
 */
InsuranceQuoteRequestDto.prototype['customerInfo'] = undefined;

/**
 * @member {module:model/InsuranceOptionsDto} insuranceOptions
 */
InsuranceQuoteRequestDto.prototype['insuranceOptions'] = undefined;

/**
 * @member {module:model/InsuranceQuoteDto} insuranceQuote
 */
InsuranceQuoteRequestDto.prototype['insuranceQuote'] = undefined;

/**
 * @member {String} policyId
 */
InsuranceQuoteRequestDto.prototype['policyId'] = undefined;






export default InsuranceQuoteRequestDto;

