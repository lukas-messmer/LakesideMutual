/**
 * Customer Self-Service API
 * This API allows customers of Lakeside Mutual to sign up, log in and manage their policies and user profile themselves.
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AddressDto model module.
 * @module model/AddressDto
 * @version v1.0.0
 */
class AddressDto {
    /**
     * Constructs a new <code>AddressDto</code>.
     * the customer&#39;s new address
     * @alias module:model/AddressDto
     * @param streetAddress {String} 
     * @param postalCode {String} 
     * @param city {String} 
     */
    constructor(streetAddress, postalCode, city) { 
        
        AddressDto.initialize(this, streetAddress, postalCode, city);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, streetAddress, postalCode, city) { 
        obj['streetAddress'] = streetAddress;
        obj['postalCode'] = postalCode;
        obj['city'] = city;
    }

    /**
     * Constructs a <code>AddressDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddressDto} obj Optional instance to populate.
     * @return {module:model/AddressDto} The populated <code>AddressDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddressDto();

            if (data.hasOwnProperty('streetAddress')) {
                obj['streetAddress'] = ApiClient.convertToType(data['streetAddress'], 'String');
            }
            if (data.hasOwnProperty('postalCode')) {
                obj['postalCode'] = ApiClient.convertToType(data['postalCode'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddressDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddressDto</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AddressDto.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['streetAddress'] && !(typeof data['streetAddress'] === 'string' || data['streetAddress'] instanceof String)) {
            throw new Error("Expected the field `streetAddress` to be a primitive type in the JSON string but got " + data['streetAddress']);
        }
        // ensure the json data is a string
        if (data['postalCode'] && !(typeof data['postalCode'] === 'string' || data['postalCode'] instanceof String)) {
            throw new Error("Expected the field `postalCode` to be a primitive type in the JSON string but got " + data['postalCode']);
        }
        // ensure the json data is a string
        if (data['city'] && !(typeof data['city'] === 'string' || data['city'] instanceof String)) {
            throw new Error("Expected the field `city` to be a primitive type in the JSON string but got " + data['city']);
        }

        return true;
    }


}

AddressDto.RequiredProperties = ["streetAddress", "postalCode", "city"];

/**
 * @member {String} streetAddress
 */
AddressDto.prototype['streetAddress'] = undefined;

/**
 * @member {String} postalCode
 */
AddressDto.prototype['postalCode'] = undefined;

/**
 * @member {String} city
 */
AddressDto.prototype['city'] = undefined;






export default AddressDto;

