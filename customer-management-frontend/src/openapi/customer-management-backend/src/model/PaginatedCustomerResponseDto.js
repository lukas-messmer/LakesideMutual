/**
 * Customer Management API
 * This API allows call center operators to interact with customers and to edit their user profiles.
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CustomerDto from './CustomerDto';
import Link from './Link';

/**
 * The PaginatedCustomerResponseDto model module.
 * @module model/PaginatedCustomerResponseDto
 * @version v1.0.0
 */
class PaginatedCustomerResponseDto {
    /**
     * Constructs a new <code>PaginatedCustomerResponseDto</code>.
     * @alias module:model/PaginatedCustomerResponseDto
     */
    constructor() { 
        
        PaginatedCustomerResponseDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PaginatedCustomerResponseDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaginatedCustomerResponseDto} obj Optional instance to populate.
     * @return {module:model/PaginatedCustomerResponseDto} The populated <code>PaginatedCustomerResponseDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaginatedCustomerResponseDto();

            if (data.hasOwnProperty('filter')) {
                obj['filter'] = ApiClient.convertToType(data['filter'], 'String');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('customers')) {
                obj['customers'] = ApiClient.convertToType(data['customers'], [CustomerDto]);
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], [Link]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaginatedCustomerResponseDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaginatedCustomerResponseDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['filter'] && !(typeof data['filter'] === 'string' || data['filter'] instanceof String)) {
            throw new Error("Expected the field `filter` to be a primitive type in the JSON string but got " + data['filter']);
        }
        if (data['customers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['customers'])) {
                throw new Error("Expected the field `customers` to be an array in the JSON data but got " + data['customers']);
            }
            // validate the optional field `customers` (array)
            for (const item of data['customers']) {
                CustomerDto.validateJSON(item);
            };
        }
        if (data['links']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['links'])) {
                throw new Error("Expected the field `links` to be an array in the JSON data but got " + data['links']);
            }
            // validate the optional field `links` (array)
            for (const item of data['links']) {
                Link.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} filter
 */
PaginatedCustomerResponseDto.prototype['filter'] = undefined;

/**
 * @member {Number} limit
 */
PaginatedCustomerResponseDto.prototype['limit'] = undefined;

/**
 * @member {Number} offset
 */
PaginatedCustomerResponseDto.prototype['offset'] = undefined;

/**
 * @member {Number} size
 */
PaginatedCustomerResponseDto.prototype['size'] = undefined;

/**
 * @member {Array.<module:model/CustomerDto>} customers
 */
PaginatedCustomerResponseDto.prototype['customers'] = undefined;

/**
 * @member {Array.<module:model/Link>} links
 */
PaginatedCustomerResponseDto.prototype['links'] = undefined;






export default PaginatedCustomerResponseDto;

