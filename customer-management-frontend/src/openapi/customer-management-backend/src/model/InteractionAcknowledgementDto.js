/**
 * Customer Management API
 * This API allows call center operators to interact with customers and to edit their user profiles.
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InteractionAcknowledgementDto model module.
 * @module model/InteractionAcknowledgementDto
 * @version v1.0.0
 */
class InteractionAcknowledgementDto {
    /**
     * Constructs a new <code>InteractionAcknowledgementDto</code>.
     * the id of the newest acknowledged interaction
     * @alias module:model/InteractionAcknowledgementDto
     * @param lastAcknowledgedInteractionId {String} 
     */
    constructor(lastAcknowledgedInteractionId) { 
        
        InteractionAcknowledgementDto.initialize(this, lastAcknowledgedInteractionId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, lastAcknowledgedInteractionId) { 
        obj['lastAcknowledgedInteractionId'] = lastAcknowledgedInteractionId;
    }

    /**
     * Constructs a <code>InteractionAcknowledgementDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InteractionAcknowledgementDto} obj Optional instance to populate.
     * @return {module:model/InteractionAcknowledgementDto} The populated <code>InteractionAcknowledgementDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InteractionAcknowledgementDto();

            if (data.hasOwnProperty('lastAcknowledgedInteractionId')) {
                obj['lastAcknowledgedInteractionId'] = ApiClient.convertToType(data['lastAcknowledgedInteractionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InteractionAcknowledgementDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InteractionAcknowledgementDto</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InteractionAcknowledgementDto.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['lastAcknowledgedInteractionId'] && !(typeof data['lastAcknowledgedInteractionId'] === 'string' || data['lastAcknowledgedInteractionId'] instanceof String)) {
            throw new Error("Expected the field `lastAcknowledgedInteractionId` to be a primitive type in the JSON string but got " + data['lastAcknowledgedInteractionId']);
        }

        return true;
    }


}

InteractionAcknowledgementDto.RequiredProperties = ["lastAcknowledgedInteractionId"];

/**
 * @member {String} lastAcknowledgedInteractionId
 */
InteractionAcknowledgementDto.prototype['lastAcknowledgedInteractionId'] = undefined;






export default InteractionAcknowledgementDto;

